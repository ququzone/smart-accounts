/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { SmartAccount, SmartAccountInterface } from '../../contracts/SmartAccount'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IEntryPoint',
        name: '_EntryPoint',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AddressCannotBeZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotEntryPoint',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotSelf',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'ErrorRecoveror',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'ErrorValidator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidHook',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'ValidatorAlreadyEnabled',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'expectedValidator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'returnedValidator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'prevValidator',
        type: 'address',
      },
    ],
    name: 'ValidatorAndPrevValidatorMismatch',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'ValidatorCannotBeZeroOrSentinel',
    type: 'error',
  },
  {
    inputs: [],
    name: 'WrongArrayLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'recoveror',
        type: 'address',
      },
    ],
    name: 'AddedRecoveror',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousHandler',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'handler',
        type: 'address',
      },
    ],
    name: 'ChangedFallbackHandler',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'DisabledValidator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'EnabledValidator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'InstalledHook',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'recoveror',
        type: 'address',
      },
    ],
    name: 'RemovedRecoveror',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'UninstalledHook',
    type: 'event',
  },
  {
    stateMutability: 'nonpayable',
    type: 'fallback',
  },
  {
    inputs: [],
    name: 'addDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'addHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recoveror',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'addRecoveror',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'prevValidator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'disableValidator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'enableValidator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'entryPoint',
    outputs: [
      {
        internalType: 'contract IEntryPoint',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'func',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'dest',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'value',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes[]',
        name: 'func',
        type: 'bytes[]',
      },
    ],
    name: 'executeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFallbackHandler',
    outputs: [
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'start',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'pageSize',
        type: 'uint256',
      },
    ],
    name: 'getRecoverorsPaginated',
    outputs: [
      {
        internalType: 'address[]',
        name: 'array',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'next',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'start',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'pageSize',
        type: 'uint256',
      },
    ],
    name: 'getValidatorsPaginated',
    outputs: [
      {
        internalType: 'address[]',
        name: 'array',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'next',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'defalutCallbackHandler',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'validators',
        type: 'address[]',
      },
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recoveror',
        type: 'address',
      },
    ],
    name: 'isRecoverorEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'isValidatorEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'recovery',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'prevBeforeHook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'prevAfterHook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'removeHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'prevRecoveror',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recoveror',
        type: 'address',
      },
    ],
    name: 'removeRecoveror',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'handler',
        type: 'address',
      },
    ],
    name: 'setFallbackHandler',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'func',
        type: 'bytes',
      },
    ],
    name: 'sudo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'initCode',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'callGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'verificationGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'preVerificationGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'paymasterAndData',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
        ],
        internalType: 'struct UserOperation',
        name: 'userOp',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'userOpHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'missingAccountFunds',
        type: 'uint256',
      },
    ],
    name: 'validateUserOp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'validationData',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'withdrawAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawDepositTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0346200015457601f6200244338819003918201601f19168301916001600160401b0383118484101762000159578084926020946040528339810103126200015457516001600160a01b0381168103620001545760805260005460ff8160081c16620000ff5760ff80821603620000c3575b6040516122d390816200017082396080518181816101c9015281816103db015281816104fe015281816105990152818161088001528181610d3101528181610d7101528181610e920152610f5d0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000072565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001a575b3415611d0c575b600080fd5b60003560e01c80633a871cdd1461018a5780633d6767f81461018557806347e1da2a146101805780634a58db191461017b5780634d44560d146101765780635a438970146101715780635faac46b1461016c5780636dd3bf741461016757806375f2516714610162578063856dfd991461015d5780639229e12014610158578063a28b34c414610153578063ad05234a1461014e578063b0d691fe14610149578063b61d27f614610144578063bb6aa2b41461013f578063c399ec881461013a578063cf777df914610135578063d087d28814610130578063d2b0e7791461012b578063d561e48914610126578063f08a0323146101215763fa8490150361000e57611237565b6111b3565b611089565b610fc7565b610f2a565b610f03565b610e66565b610da6565b610d55565b610d11565b610c35565b610aa7565b61096c565b6108fe565b6108cd565b610864565b610718565b6105f9565b610567565b6104e7565b61036a565b610306565b3461001557600319606036820112610015576004359067ffffffffffffffff821161001557610160908236030112610015576044356001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036102385761020261021a926024359060040161185e565b908061021e575b506040519081529081906020820190565b0390f35b600080808093338219f150610231611499565b5038610209565b60405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606490fd5b6001600160a01b0381160361001557565b35906102998261027d565b565b9181601f840112156100155782359167ffffffffffffffff8311610015576020838186019501011161001557565b906040600319830112610015576004356102e28161027d565b916024359067ffffffffffffffff8211610015576103029160040161029b565b9091565b3461001557610314366102c9565b903033036103275761032592611da2565b005b60405163d97d09c160e01b8152600490fd5b9181601f840112156100155782359167ffffffffffffffff8311610015576020808501948460051b01011161001557565b3461001557606036600319011261001557600467ffffffffffffffff81358181116100155761039c9036908401610339565b9092602435838111610015576103b59036908301610339565b9093604435908111610015576103ce9036908401610339565b9490926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036104cd578585148015906104b9575b6104aa57508161045e57505060005b82811061042457005b8061045861043d610438600194878a611551565b611566565b61045261044b8489886115a3565b369161168f565b906119d9565b0161041b565b91909460009493945b85811061047057005b806104a46104846104386001948a87611551565b61048f838b89611551565b3561049e61044b858b8a6115a3565b91611b64565b01610467565b60405163150072e360e11b8152fd5b50821515801561040c57508583141561040c565b60405163cb10477360e01b8152fd5b600091031261001557565b600080600319360112610564576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681813b156105645760405163b760faf960e01b8152306004820152918290602490829034905af1801561055f57610553575080f35b61055c90611427565b80f35b611471565b80fd5b346100155760006040366003190112610564576004356105868161027d565b30330361032757816001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001692833b156105f55760449083604051958694859363040b850f60e31b855216600484015260243560248401525af1801561055f57610553575080f35b8280fd5b3461001557610607366102c9565b9130330361032757806106216001600160a01b0392611f3e565b1690813b156100155760405190633cbcc2b960e21b8252818061064b60009687946004840161192c565b038183865af1801561055f5761068b575b5060207fcc87bd27eafb647c2f20f074fcdd0fe8d9c2171b9876dacd94c4a62149d4fe0391604051908152a180f35b7fcc87bd27eafb647c2f20f074fcdd0fe8d9c2171b9876dacd94c4a62149d4fe0391926106b9602092611427565b92915061065c565b90929192604082016040835281518091526060830160208093019160005b848282106106fb575050506001600160a01b0391509416910152565b84516001600160a01b0316845293840193909201916001016106df565b34610015576040366003190112610015576004356107358161027d565b6024359061074282611e3b565b61074f6040519182611440565b828152601f1961075e84611e3b565b013660208301376000926001600160a01b038093168452600360205261078f604085206001600160a01b0390541690565b838116801515908161081c575b5080610813575b15610800576107f46107e7826107ce6107fa946107c08a89611e53565b906001600160a01b03169052565b6001600160a01b03166000526003602052604060002090565b546001600160a01b031690565b94611e67565b9361078f565b8285815261021a604051928392836106c1565b508185106107a3565b6001915014153861079c565b6060600319820112610015576004356108408161027d565b91602435916044359067ffffffffffffffff8211610015576103029160040161029b565b346100155761087236610828565b6001600160a01b03939291937f00000000000000000000000000000000000000000000000000000000000000001633036108bb57610325936108b591369161168f565b91611cf5565b60405163cb10477360e01b8152600490fd5b346100155760203660031901126100155760206108f46004356108ef8161027d565b611e8c565b6040519015158152f35b346100155760003660031901126100155760207f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4546001600160a01b0360405191168152f35b60409060031901126100155760043561095c8161027d565b906024356109698161027d565b90565b346100155761097a36610944565b90303303610327576001600160a01b03808316809181151580610a9c575b6109a190611ef2565b80841660005260036020526040600020541603610a5757610a4e610a3e846107ce602095610a23610a096107e77fae2356b2cb822c142448e45b195255df334895b014113d50bb822c311cddc8559a6001600160a01b03166000526003602052604060002090565b916001600160a01b03166000526003602052604060002090565b906001600160a01b03166001600160a01b0319825416179055565b6001600160a01b03198154169055565b604051908152a1005b60405162461bcd60e51b815260206004820152601960248201527f6974656d20616e64207072656974656d206d69736d61746368000000000000006044820152606490fd5b506001821415610998565b3461001557606036600319011261001557600435610ac48161027d565b60243590610ad18261027d565b604435610add8161027d565b303303610327576001600160a01b0381169260405163e445e7dd60e01b80825260209182816004818a5afa90811561055f57600091610c18575b50610b218161196d565b610b9a57505050610b3191612184565b803b156100155760405162d638f360e41b815260008160048183865af1801561055f57610b81575b507fa20b2dba0769450542a688d94941808255eb735da2fa53df12ff98fc529ffd4e600080a2005b80610b8e610b9492611427565b806104dc565b38610b59565b6040519081528181600481895afa90811561055f57600192600092610beb575b5050610bc58161196d565b03610bd957610bd49250612225565b610b31565b610be682610bd494612184565b612225565b610c0a9250803d10610c11575b610c028183611440565b810190611955565b3880610bba565b503d610bf8565b610c2f9150833d8511610c1157610c028183611440565b38610b17565b3461001557604036600319011261001557600435610c528161027d565b60243590610c5f82611e3b565b610c6c6040519182611440565b828152601f19610c7b84611e3b565b013660208301376000926001600160a01b0380931684526004602052610cac604085206001600160a01b0390541690565b8381168015159081610d05575b5080610cfc575b15610800576107f46107e782610cdd610cf6946107c08a89611e53565b6001600160a01b03166000526004602052604060002090565b93610cac565b50818510610cc0565b60019150141538610cb9565b346100155760003660031901126100155760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461001557610d6336610828565b6001600160a01b03939291937f00000000000000000000000000000000000000000000000000000000000000001633036108bb576103259361049e91369161168f565b3461001557610db4366102c9565b91610dc5610dc133611ebf565b1590565b610e4e57610dd5610dc182611e8c565b610e2b576001600160a01b031691823b1561001557610e0e926000928360405180968195829463064acaab60e11b84526004840161192c565b03925af1801561055f57610e1e57005b80610b8e61032592611427565b60405163304106bf60e11b81526001600160a01b03919091166004820152602490fd5b60405163a841d6f560e01b8152336004820152602490fd5b34610015576000366003190112610015576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561055f57602091600091610ed6575b50604051908152f35b610ef69150823d8111610efc575b610eee8183611440565b810190611462565b38610ecd565b503d610ee4565b346100155760203660031901126100155760206108f4600435610f258161027d565b611ebf565b3461001557600036600319011261001557604051631aab3f0d60e11b8152306004820152600060248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561055f5761021a91600091610fa957506040519081529081906020820190565b610fc1915060203d8111610efc57610eee8183611440565b38610209565b3461001557610fd536610944565b90303303610327576001600160a01b0380831680918115158061107e575b610ffc90611ef2565b80841660005260046020526040600020541603610a5757610a4e610a3e84610cdd602095610a236110646107e77f779fb1c42fad72db3b3d13498dce770027f44544e8a1a5a9e06e530db8cd68929a6001600160a01b03166000526004602052604060002090565b916001600160a01b03166000526004602052604060002090565b506001821415610ff3565b34610015576060366003190112610015576004356110a68161027d565b67ffffffffffffffff602435818111610015576110c7903690600401610339565b90604435928311610015576110e3611127933690600401610339565b9290916000549561110b60ff8860081c1615809881996111a5575b8115611185575b506114c9565b8661111e600160ff196000541617600055565b61116c576115ba565b61112d57005b61113d61ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61118061010061ff00196000541617600055565b6115ba565b303b15915081611197575b5038611105565b6001915060ff161438611190565b600160ff82161091506110fe565b34610015576020366003190112610015576004356111d08161027d565b303303610327577f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4549061120381611d5d565b6001600160a01b0380911691167f06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c600080a3005b3461001557611245366102c9565b90303303610327576040516301ffc9a760e01b81526329c791d960e01b60048201526001600160a01b03841693906020908181602481895afa90811561055f576000916113e4575b50156113d25760405163e445e7dd60e01b8082529082816004818a5afa90811561055f576000916113b5575b506112c38161196d565b6113485750506112d290611fd0565b823b15610015576040516313861fb560e01b815291600091839182916112fc91906004840161192c565b038183865af1801561055f57611335575b507fe9fdf38cc72369bf1f90f6adc9835796c285cba93070412e0e48413e63c5b908600080a2005b80610b8e61134292611427565b3861130d565b6040519081528181600481895afa90811561055f57600192600092611398575b50506113738161196d565b036113865761138190612071565b6112d2565b8061139361138192611fd0565b612071565b6113ae9250803d10610c1157610c028183611440565b3880611368565b6113cc9150833d8511610c1157610c028183611440565b386112b9565b604051639c9d882360e01b8152600490fd5b6114049150823d841161140a575b6113fc8183611440565b81019061193d565b3861128d565b503d6113f2565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161143b57604052565b611411565b90601f8019910116810190811067ffffffffffffffff82111761143b57604052565b90816020910312610015575190565b6040513d6000823e3d90fd5b67ffffffffffffffff811161143b57601f01601f191660200190565b3d156114c4573d906114aa8261147d565b916114b86040519384611440565b82523d6000602084013e565b606090565b156114d057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b91908110156115615760051b0190565b61153b565b356109698161027d565b903590601e1981360301821215610015570180359067ffffffffffffffff82116100155760200191813603831361001557565b90821015611561576103029160051b810190611570565b939092919381850361167d576115cf90611d5d565b600160008190527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c80546001600160a01b0319908116831790915560046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe058054909116821790559360005b81811061164c57505050505050565b8061167761165c88938589611551565b356116668161027d565b6116718387896115a3565b91611da2565b0161163d565b60405163150072e360e11b8152600490fd5b92919261169b8261147d565b916116a96040519384611440565b829481845281830111610015578281602093846000960137010152565b9035601e198236030181121561001557016020813591019167ffffffffffffffff821161001557813603831361001557565b908060209392818452848401376000828201840152601f01601f1916010190565b919082519283825260005b848110611745575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611724565b61184b6117b6610969959360608452611785606085016117788361028e565b6001600160a01b03169052565b6020810135608085015261183b61179f60408301836116c6565b9390610160948560a08901526101c08801916116f8565b916118326117de6117ca60608401846116c6565b605f198a8803810160c08c015296916116f8565b608083013560e08901526118216101009660a0850135888b01526101209060c0860135828c01526101409860e08701358a8d0152860135908b01528401846116c6565b90868a8403016101808b01526116f8565b938101906116c6565b91858403016101a08601526116f8565b9260208201526040818403910152611719565b61186c610140820182611570565b8101604082820312610015578135916118848361027d565b60208101359067ffffffffffffffff8211610015570181601f82011215610015576001600160a01b03918160206118bd9335910161168f565b91166118cb610dc182611e8c565b611923576118f593600060209460405196879586948593634dffc32360e01b855260048501611759565b03925af190811561055f5760009161190b575090565b610969915060203d8111610efc57610eee8183611440565b50505050600190565b9160206109699381815201916116f8565b90816020910312610015575180151581036100155790565b90816020910312610015575160038110156100155790565b6003111561197757565b634e487b7160e01b600052602160045260246000fd5b6060906001600160a01b036109699493168152600060208201528160408201520190611719565b61096993926001600160a01b0360609316825260208201528160408201520190611719565b6001600081905260205290611a0d7fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f6107e7565b6001600160a01b038116906001821115611a9657813b1561001557604051632b668a3760e21b8152916000908390818381611a4c898b6004840161198d565b03925af190811561055f57611a7e926107e792611a83575b506001600160a01b03166000526001602052604060002090565b611a0d565b80610b8e611a9092611427565b38611a64565b5050611aa28183611ccd565b60016000526002602052611ad57fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06107e7565b6001600160a01b038116906001821115611b5e57813b1561001557604051632b668a3760e21b8152916000908390818381611b14898b6004840161198d565b03925af190811561055f57611b46926107e792611b4b575b506001600160a01b03166000526002602052604060002090565b611ad5565b80610b8e611b5892611427565b38611b2c565b50505050565b600160008190526020529291611b997fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f6107e7565b6001600160a01b038116906001821115611c0f57813b1561001557604051632b668a3760e21b8152916000908390818381611bd9898b8e600485016119b4565b03925af190811561055f57611c0a926107e792611a8357506001600160a01b03166000526001602052604060002090565b611b99565b5050611c1c818386611cf5565b60016000526002602052611c4f7fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06107e7565b6001600160a01b038116906001821115611cc557813b1561001557604051632b668a3760e21b8152916000908390818381611c8f898b8e600485016119b4565b03925af190811561055f57611cc0926107e792611b4b57506001600160a01b03166000526002602052604060002090565b611c4f565b505050509050565b600091829182602083519301915af1611ce4611499565b9015611ced5750565b602081519101fd5b916000928392602083519301915af1611ce4611499565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4548015610325576000808092368280373360601b3652818060143601925af13d82803e15611d59573d90f35b3d90fd5b6001600160a01b03811615611d90577f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d455565b6040516303988b8160e61b8152600490fd5b6001600160a01b0390929192611db781612112565b1690813b156100155760405163064acaab60e11b8152602060048201529260009184918291611deb916024840191906116f8565b038183855af190811561055f577f702ed4645b59645b8a8b7dd88e069cb684a1170094eca847038827e03c1107a492602092611e2c575b50604051908152a1565b611e3590611427565b38611e22565b67ffffffffffffffff811161143b5760051b60200190565b80518210156115615760209160051b010190565b6000198114611e765760010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038091169081600114159182611ea857505090565b909150600052600360205260406000205416151590565b6001600160a01b038091169081600114159182611edb57505090565b909150600052600460205260406000205416151590565b15611ef957565b60405162461bcd60e51b815260206004820152601e60248201527f6974656d2063616e2774206265207a65726f206f722073656e74696e656c00006044820152606490fd5b6001600160a01b039081811680151580611fc5575b611f5c90611ef2565b6000818152600460205283604082205416611b5e57611fa560409261029995600184528484205416908352838320906001600160a01b03166001600160a01b0319825416179055565b6001815220906001600160a01b03166001600160a01b0319825416179055565b506001811415611f53565b6001600160a01b039081811680151580612066575b611fee90611ef2565b600090808252600160205283604083205416611b5e576040826102999560016120369552828220541692815220906001600160a01b03166001600160a01b0319825416179055565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f610a23565b506001811415611fe5565b6001600160a01b039081811680151580612107575b61208f90611ef2565b600090808252600260205283604083205416611b5e576040826102999560016120d79552828220541692815220906001600160a01b03166001600160a01b0319825416179055565b600160005260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0610a23565b506001811415612086565b6001600160a01b039081811680151580612179575b61213090611ef2565b6000818152600360205283604082205416611b5e57611fa560409261029995600184528484205416908352838320906001600160a01b03166001600160a01b0319825416179055565b506001811415612127565b6001600160a01b03918281168015158061221a575b6121a290611ef2565b8383166000526001602052836040600020541603610a5757612201610a3e92610a23610299956121e5856001600160a01b03166000526001602052604060002090565b5416916001600160a01b03166000526001602052604060002090565b6001600160a01b03166000526001602052604060002090565b506001811415612199565b6001600160a01b0391828116801515806122bb575b61224390611ef2565b8383166000526002602052836040600020541603610a57576122a2610a3e92610a2361029995612286856001600160a01b03166000526002602052604060002090565b5416916001600160a01b03166000526002602052604060002090565b6001600160a01b03166000526002602052604060002090565b50600181141561223a56fea164736f6c6343000813000a'

type SmartAccountConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SmartAccountConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class SmartAccount__factory extends ContractFactory {
  constructor(...args: SmartAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(_EntryPoint: string, overrides?: Overrides & { from?: string }): Promise<SmartAccount> {
    return super.deploy(_EntryPoint, overrides || {}) as Promise<SmartAccount>
  }
  override getDeployTransaction(_EntryPoint: string, overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(_EntryPoint, overrides || {})
  }
  override attach(address: string): SmartAccount {
    return super.attach(address) as SmartAccount
  }
  override connect(signer: Signer): SmartAccount__factory {
    return super.connect(signer) as SmartAccount__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SmartAccountInterface {
    return new utils.Interface(_abi) as SmartAccountInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SmartAccount {
    return new Contract(address, _abi, signerOrProvider) as SmartAccount
  }
}
